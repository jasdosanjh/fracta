// Background SVG
.header-bg {
    position: relative;
    height: 60vh;
    background: #24C6DC;  /* fallback for old browsers */
    background: -webkit-linear-gradient(to right, var(--primary-dark), var(--primary));  /* Chrome 10-25, Safari 5.1-6 */
    background: linear-gradient(to right, var(--primary-dark), var(--primary)); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    color: var(--white);

    @media only screen and (min-width: $bp-medium) {
        height: 70vh;
    }

    .bg-svg {
        position: absolute;
        bottom: 0;
        width: 100%;
        height: auto;
      }
}

header {
    display: flex;
    flex-direction: column;
    justify-content: center;
    text-align: center;
    height: 60vh;

    img {
        display: none;

        @media only screen and (min-width: $bp-medium) {
            display: inline;
            height: 350px;
        }

        @media only screen and (min-width: $bp-large) {
            height: 420px;
        }
    }

    @media only screen and (min-width: $bp-medium) {
        display: grid;
        grid-template-columns: repeat(10, 1fr);
        grid-gap: 0;
        justify-content: center;
        align-items: center;
        text-align: left;
    }
}

.content {
    grid-column: 3 / span 4;
    grid-row: 2 / span 2;

    p {
        margin-top: 5px;
    }
}

.header-image {
    display: inline-block;
    grid-column: 7 / span 2;
    grid-row: 2;
    position: relative;
    animation: MoveUpDown 1.8s linear infinite;
}

@keyframes MoveUpDown {
    0%, 100% {
      bottom: 0;
    }
    50% {
      bottom: 25px;
    }
}

/* make keyframes that tell the start state and the end state of our object */
@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

.fade-in {
  opacity:0;  /* make things invisible upon start */
  -webkit-animation:fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  -moz-animation:fadeIn ease-in 1;
  animation:fadeIn ease-in 1;

  -webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  -moz-animation-fill-mode:forwards;
  animation-fill-mode:forwards;

  -webkit-animation-duration:1s;
  -moz-animation-duration:1s;
  animation-duration:1s;
}

.fade-in.one {
  -webkit-animation-delay: 0.1s;
  -moz-animation-delay: 0.1s;
  animation-delay: 0.1s;
}

.fade-in.two {
  -webkit-animation-delay: 0.2s;
  -moz-animation-delay:0.2s;
  animation-delay: 0.2s;
}

.fade-in.three {
  -webkit-animation-delay: 0.3s;
  -moz-animation-delay: 0.3s;
  animation-delay: 0.3s;
}